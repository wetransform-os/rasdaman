#!/bin/sh
#
# This file is part of rasdaman community.
#
# Rasdaman community is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Rasdaman community is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2003 - 2019 Peter Baumann / rasdaman GmbH.
#
# For more information please see <http://www.rasdaman.org>
# or contact Peter Baumann via <baumann@rasdaman.com>.
#
# ------------------------------------------------------------------------------
#
# SYNOPSIS
# ./petascope_insertdemo.sh
#
# Description
#  Command-line utility for importing test data to Petascope by WCST_Import.
#  Database connection details are read from etc/petascope.properties
#
# PRECONDITIONS
#  1) PostgreSQL server must be running with petascopedb
#  2) etc/petascope.properties should be present, and the metadata_user should
#     have appropriate write rights in postgres.

PROG=$(basename "$0")
VERSION="@VERSION_FULL@"
BUILD="@GIT_HASH@"

SETTINGS="@sysconfdir@/petascope.properties"
WCST_IMPORT="@bindir@/wcst_import.sh"
# petascope updateN.sql scripts and demo examples
SCRIPT_DIR="@pkgdatadir@/petascope"
# input file directory (coverage files + recipe files .template.json)
DATA_DIRECTORY=$SCRIPT_DIR/petascope_insertdemo_data
DEFAULT_SERVICE_ENDPOINT="http://localhost:8080"

RC_OK=0
RC_ERROR=1
RESULT=$RC_OK

# ------------------------------------------------------------------------------
# functions
# ------------------------------------------------------------------------------

#
# logging
#
log()  { echo "$PROG: $*"; }
logn() { printf "%s" "$PROG: $*"; }
error(){ echo "$PROG: $*" >&2; exit $RC_ERROR; }
check(){ if [ "$1" -eq 0 ]; then echo "ok."; else echo "failed."; RESULT="$RC_ERROR"; fi }

usage()
{
cat <<EOF
  Usage: $PROG [OPTION]...

  Description:
    Insert sample demo data into rasdaman.

  Options:
    -s, --service-endpoint
     specify the service endpoint (default: $DEFAULT_SERVICE_ENDPOINT)
    -h, --help
     display this help and exit
EOF
  exit $RC_OK
}

#
# Import all coverages exist in petascope
#
import_all_coverages()
{
  log "importing sample coverages into rasdaman $VERSION..."
  log "petascope service endpoint: $PETASCOPE_URL"
  log "secore service endpoint: $SECORE_URL"

  for DATA in "$DATA_DIRECTORY"/*; do
    RECIPE_TEMPLATE_FILE=$(find "$DATA" -type f -name "*.template.json")
    COVERAGE_ID=$(grep -Po '"coverage_id":.*?[^\\]",' "$RECIPE_TEMPLATE_FILE" | awk -F'"' '{print $4}')
    import_coverage "$COVERAGE_ID" "$DATA" "$RECIPE_TEMPLATE_FILE"
  done
}


# return the value of key=value from properties file ($1: the key, $2: the file)
get_value(){    
    key_value=$(grep -E "^$1=" "$2") && echo "${key_value#*=}" || echo "$NULL_VALUE"
}


#
# import
#
import_coverage()
{
  COVERAGE_ID="$1"
  DATA_FOLDER_PATH="$2" # coverage directory
  RECIPE_TEMPLATE_FILE="$3"
  RECIPE_FILE="/tmp/ingest.json"

  sed -e "s|DATA_FOLDER_PATH|$DATA_FOLDER_PATH|g" \
      -e "s|PETASCOPE_URL|$PETASCOPE_URL|g" \
      -e "s|SECORE_URL|$SECORE_URL|g" \
      "$RECIPE_TEMPLATE_FILE" > "$RECIPE_FILE"

  RASADMIN_USER=$(get_value "rasdaman_admin_user" "$SETTINGS")
  RASADMIN_PASS=$(get_value "rasdaman_admin_pass" "$SETTINGS")
  
  # credentials files for wcst_import to authenticate to petascope
  RASADMIN_CREDENTIALS_FILE="/tmp/rasadmin_credentials.txt"
  echo "$RASADMIN_USER:$RASADMIN_PASS" > "$RASADMIN_CREDENTIALS_FILE"
  chmod 600 "$RASADMIN_CREDENTIALS_FILE"
  

  log_file="/tmp/$COVERAGE_ID.log"
  logn "importing coverage $COVERAGE_ID (detail output in $log_file)... "
  rm -f "$log_file"


  if [ -f "$log_file" ]; then
    # cannot redirect to this log file
    $WCST_IMPORT -i "$RASADMIN_CREDENTIALS_FILE" "$RECIPE_FILE"
  else
    $WCST_IMPORT -i "$RASADMIN_CREDENTIALS_FILE" "$RECIPE_FILE" > "$log_file" 2>&1
  fi
  check $?

  rm -f "$RECIPE_FILE"
}

# ------------------------------------------------------------------------------
# work
# ------------------------------------------------------------------------------

#
# log starting message
#
log "rasdaman $VERSION build $BUILD";
#
# import all coverages example
#


# ----------------------------------------------------------------------------
# parse command-line options
# ----------------------------------------------------------------------------

SERVICE_ENDPOINT="$DEFAULT_SERVICE_ENDPOINT"
option=
for i in "$@"; do
  if [ -n "$option" ]; then
    case $option in
      -s|--service-endpoint*) SERVICE_ENDPOINT="$i";;
      *)                      error "unknown option: $option";;
    esac
    option=""
  else
    option=""
    case $i in
      -h|--help*) usage;;
      *)          option="$i";;
    esac
  fi
done

PETASCOPE_URL="$SERVICE_ENDPOINT/rasdaman/ows"

SECORE_URL="$DEFAULT_SERVICE_ENDPOINT/def"

import_all_coverages

log "done."
exit $RESULT
