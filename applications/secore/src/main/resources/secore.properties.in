# This file is part of rasdaman community.
#
# Rasdaman community is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Rasdaman community is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2003 - 2020 Peter Baumann / rasdaman GmbH.
#
# For more information please see <http://www.rasdaman.org>
# or contact Peter Baumann via <baumann@rasdaman.com>.      
# ------------------------------------------------------------------------------
#
# SECORE configuration file
#
# Notes:
#  Settings should be specified in key=value pairs.
#  The server needs to be restarted for any changes in this file to take effect.


#------------------------ General SECORE configuration -------------------------

# Directory holding CRS definition updates (insert, delete) to apply to userdb.
db_updates.path=@SHARE_DATA_DIR@/secore

# Service URL, used in automatic substitution of URNs (urn:ogc:def) and URLs 
# (http://localhost:8080/def). Set this parameter to your public service URL if 
# SECORE is behind a proxy.
# Note:  change only when running SECORE as a standalone web application.
# When embedded in petascope, this setting is dictated by petascope_servlet_url in petascope.properties. 
# e.g. petascope_servlet_url=http://your_domain.com/rasdaman/ows -> service.url=http://your_domain.com/rasdaman/def
service.url=http://localhost:8080/def

# Default codeSpace to be used for definitions constructed on the fly by 
# crs-compound. The value of the codeSpace attribute (if present) shall indicate 
# a dictionary, thesaurus, classification scheme, authority, or pattern for the term.
codespace=OGC

# Prefix for controller in web application URL routing, e.g the /def in
# http://localhost:8080/def
server.contextPath=/def

# Account with read/write access to various service management capabilities;
# Login at http://localhost:8080/def/index.jsp to access the management console.
# It is highly recommended to change the default password.
secore_admin_user=secoreuser
secore_admin_pass=secorepasswd


#----------------------- SECORE deployment configuration -----------------------

# Specify how is SECORE deployed:
#  1. embedded - start standalone with embedded Tomcat, listening on server.port;
#                make sure to not clash with the server.port in petascope.properties
#  2. external - def.war is deployed in webapps dir of external Tomcat
# During compilation it is configured with cmake -DJAVA_SERVER=embedded/external
java_server=@GENERATED_java_server@

# Port on which embedded petascope (java_server=embedded above) will listen when 
# rasdaman starts. This setting has no effect when java_server=external.
server.port=8080

# Path to folder where embedded secore stores its database. This folder needs 
# read and write permissions for the system user running rasdaman if 
# java_server=embedded. If java_server=external secore, then a secoredb folder 
# will be automatically created in Tomcat's webapps directory for this purpose,
# so no need to adapt set any value for this setting.
secoredb.path=/opt/rasdaman/data/secore


#---------------------------- logging configuration ----------------------------

# Configuration for SECORE logging; by default only level INFO or higher is
# logged to a file.
log4j.rootLogger=INFO, rollingFile

# Reduce the log information from Spring, Hibernate
log4j.logger.org.springframework=WARN
log4j.logger.org.hibernate=WARN

# Configure file logging
# The paths for file logging specified below should be write-accessible by the 
# system user running Tomcat. If running embedded Tomcat, then the files should
# be write accessible by the system user running rasdaman.
log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout  
log4j.appender.rollingFile.layout.ConversionPattern=%6p [%d{yyyy-MM-dd HH:mm:ss}] %c{1}@%L: %m%n  

# Select one strategy for rolling files and comment out the other

# 1. Rolling files by maximum size and index
log4j.appender.rollingFile.File=@LOG_DIR@/secore.log
log4j.appender.rollingFile.MaxFileSize=10MB
log4j.appender.rollingFile.MaxBackupIndex=10
log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender

# 2. Rolling files by time interval (e.g. once a day, or once a month)
#log4j.appender.rollingFile.rollingPolicy.ActiveFileName=@LOG_DIR@/secore.log  
#log4j.appender.rollingFile.rollingPolicy.FileNamePattern=@LOG_DIR@/secore.%d{yyyyMMdd}.log.gz
#log4j.appender.rollingFile=org.apache.log4j.rolling.RollingFileAppender  
#log4j.appender.rollingFile.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy  
