{
    "id": "load_collection",
    "summary": "Load a collection",
    "description": "Loads a collection by its id and returns it as a processable data cube. The data that is added to the data cube can be restricted\nwith the parameters `spatial_extent`, `temporal_extent`, `bands` and `properties`. If no data is available for the given extents, a\n`NoDataAvailable` exception is thrown.\n\n\n**Remarks:**\n\n\n* The bands (and all dimensions that specify nominal dimension labels) are expected to be ordered as specified in the metadata if the `bands`\nparameter is set to `null`.\n\n* If no additional parameter is specified this would imply that the whole data set is expected to be loaded. Due to the large size of many data\nsets, this is not recommended and may be optimized by back-ends to only load the data that is actually required after evaluating subsequent\nprocesses such as filters. This means that the values in the data cube should be processed only after the data has been limited to the required\nextent and as a consequence also to a manageable size.",
    "parameters": [
        {
            "name": "id",
            "description": "The collection id.",
            "schema": {
                "type": "string",
                "subtype": "collection-id",
                "pattern": "^[\\w\\-\\.~/]+$"
            }
        },
        {
            "name": "spatial_extent",
            "description": "Limits the data to load from the collection to the specified bounding box or WKT geometry.\n\n\nThe process loads a pixel into the data cube if the point at the pixel center intersects with the bounding box or the WKT geometry.\n\n\nSet this parameter to `null` to set no limit for the spatial extent.",
            "schema": [
                {
                    "title": "Bounding Box",
                    "type": "object",
                    "subtype": "bounding-box",
                    "required": [
                        "west",
                        "south",
                        "east",
                        "north"
                    ],
                    "properties": {
                        "west": {
                            "description": "West (lower left corner, coordinate axis 1).",
                            "type": "number"
                        },
                        "south": {
                            "description": "South (lower left corner, coordinate axis 2).",
                            "type": "number"
                        },
                        "east": {
                            "description": "East (upper right corner, coordinate axis 1).",
                            "type": "number"
                        },
                        "north": {
                            "description": "North (upper right corner, coordinate axis 2).",
                            "type": "number"
                        },
                        "base": {
                            "description": "Base (optional, lower left corner, coordinate axis 3).",
                            "type": [
                                "number",
                                "null"
                            ],
                            "default": null
                        },
                        "height": {
                            "description": "Height (optional, upper right corner, coordinate axis 3).",
                            "type": [
                                "number",
                                "null"
                            ],
                            "default": null
                        },
                        "crs": {
                            "description": "Coordinate reference system of the extent, specified as as [EPSG code](http://www.epsg-registry.org/) or [WKT2 CRS string](http://docs.opengeospatial.org/is/18-010r7/18-010r7.html). Defaults to `4326` (EPSG code 4326) unless the client explicitly requests a different coordinate reference system.",
                            "anyOf": [
                                {
                                    "title": "EPSG Code",
                                    "type": "integer",
                                    "subtype": "epsg-code",
                                    "minimum": 1000,
                                    "examples": [
                                        3857
                                    ]
                                },
                                {
                                    "title": "WKT2",
                                    "type": "string",
                                    "subtype": "wkt2-definition"
                                }
                            ],
                            "default": 4326
                        }
                    }
                },
                {
                    "name": "wkt",
                    "description": "A WKT string specifying the geometry to be clipped from `x`; the areas outside of the geometry are set to null.",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "title": "No filter",
                    "description": "Don't filter spatially. All data is included in the data cube.",
                    "type": "null"
                }
            ]
        },
        {
            "name": "temporal_extent",
            "description": "Limits the data to load from the collection to the specified left-closed temporal interval. Applies to all\ntemporal dimensions. The interval has to be specified as an array with exactly two elements:\n\n\n1. The first element is the start of the temporal interval. The specified time instant is **included** in the interval.\n\n2. The second element is the end of the temporal interval. The specified time instant is **excluded** from the interval.\n\n\nThe second element must always be greater/later than the first element. Otherwise, a `TemporalExtentEmpty` exception is thrown.\n\n\nAlso supports unbounded intervals by setting one of the boundaries to `null`, but never both.\n\n\nSet this parameter to `null` to set no limit for the temporal extent.",
            "schema": [
                {
                    "type": "array",
                    "subtype": "temporal-interval",
                    "uniqueItems": true,
                    "minItems": 2,
                    "maxItems": 2,
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time",
                                "subtype": "date-time",
                                "description": "Date and time with a time zone."
                            },
                            {
                                "type": "string",
                                "format": "date",
                                "subtype": "date",
                                "description": "Date only, formatted as `YYYY-MM-DD`. The time zone is UTC. Missing time components are all 0."
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "examples": [
                        [
                            "2015-01-01T00:00:00Z",
                            "2016-01-01T00:00:00Z"
                        ],
                        [
                            "2015-01-01",
                            "2016-01-01"
                        ]
                    ]
                },
                {
                    "title": "No filter",
                    "description": "Don't filter temporally. All data is included in the data cube.",
                    "type": "null"
                }
            ]
        },
        {
            "name": "bands",
            "description": "Only adds the specified bands into the data cube so that bands that don't match the list of band names are not\navailable. Applies to all dimensions of type `bands`.\n\n\nEither the unique band name (metadata field `name` in bands) or one of the common band names (metadata field `common_name` in bands) can be specified.\nIf the unique band name and the common name conflict, the unique band name has a higher priority.\n\n\nThe order of the specified array defines the order of the bands in the data cube. If multiple bands match a common name, all matched bands are\nincluded in the original order.",
            "schema": [
                {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string",
                        "subtype": "band-name"
                    }
                },
                {
                    "title": "No filter",
                    "description": "Don't filter bands. All bands are included in the data cube.",
                    "type": "null"
                }
            ],
            "default": null,
            "optional": true
        },
        {
            "name": "properties",
            "description": "Limits the data by metadata properties to include only data in the data cube which all given conditions return\n`true` for (AND operation).\n\n\nSpecify key-value-pairs with the key being the name of the metadata property, which can be retrieved with the openEO Data Discovery for Collections.\nThe value must be a condition (user-defined process) to be evaluated against the collection metadata, see the example.",
            "schema": [
                {
                    "type": "object",
                    "subtype": "metadata-filter",
                    "title": "Filters",
                    "description": "A list of filters to check against. Specify key-value-pairs with the key being the name of the metadata property name and the value being a process evaluated against the metadata values.",
                    "additionalProperties": {
                        "type": "object",
                        "subtype": "process-graph",
                        "parameters": [
                            {
                                "name": "value",
                                "description": "The property value to be checked against.",
                                "schema": {
                                    "description": "Any data type."
                                }
                            }
                        ],
                        "returns": {
                            "description": "`true` if the data should be loaded into the data cube, otherwise `false`.",
                            "schema": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                {
                    "title": "No filter",
                    "description": "Don't filter by metadata properties.",
                    "type": "null"
                }
            ],
            "default": null,
            "optional": true
        }
    ],
    "returns": {
        "description": "A data cube for further processing. The dimensions and dimension properties (name, type, labels, reference system and resolution) correspond to the collection's metadata, but the dimension labels are restricted as specified in the parameters.",
        "schema": {
            "type": "object",
            "subtype": "datacube"
        }
    },
    "examples": [
        {
            "arguments": {
                "description": "Loading `S2_L2A` collection for 2018 and a given bbox.",
                "id": "S2_L2A",
                "spatial_extent": {
                    "west": 16.1,
                    "east": 16.6,
                    "north": 48.6,
                    "south": 47.2
                },
                "temporal_extent": [
                    "2018-01-01",
                    "2019-01-01"
                ]
            }
        }
    ],
    "links": [],
    "exceptions": {
        "NoDataAvailable": {
            "message": "There is no data available for the given extents."
        },
        "TemporalExtentEmpty": {
            "message": "The temporal extent is empty. The second instant in time must always be greater/later than the first instant in time."
        }
    },
    "wcps": null,
    "categories": [
        "Subsetting"
    ]
}